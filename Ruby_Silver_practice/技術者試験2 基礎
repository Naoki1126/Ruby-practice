1: 2, 3, 4  124 1,マジックコメントはcoding: coding_name or encoding: conding_name　であれば正しく認識される
2: 3 
3: ２, 3, 4  24 例外においてensureは必ず処理される。また、例外の補足は繰り返されない。rescue説で例外型を省略するとStandard Errorとそのサブクラスを全て補足する
4: 4  0xで始まる数値は16進数のリテラル。0で始まるものは8進数のリテラル
5: 3 
6: 3
7: 2
8: 1,4
9: 4  1　Piyoのインスタンスを作成して、@messageにはHiが代入されるが、その後Piyoクラスにて継承元クラスをsuperで呼び出しているため@messageがoverrideされる。
10: 3,5  15　PIはMathモジュールに定義されているため、メソッドを呼び出すにはinclude Mathを使う。もしくはMath::でモジュールを呼び出す
11: 5,6  25 オーバーライド不可の演算子 = ? : .. ... not &&  || or ::
12: 4  3 クラス拡張のクラスメソッドよりも特異メソッドが優先される。sが参照するStringオプジェクトは特異メソッドのgreetが優先される
13: 1 <=> sort
14: 3 
15: 6 2
16: 1,2 concatは!がつかない破壊的メソッド
17: 3
18: 4
19: 2
20: 3 文字列と整数オプジェクトの連結は基本的にTypeErrorが発生するが、文字列に対し*を使うとその分連結した文字列が変える
21`: 2　改行は\n
22: 5  1 concatは破壊的メソッド chop、chompは非破壊的メソッド 従ってコード上実行されているのは3行目と出力のみ
23: 4
24: 3
25: 1,3 get_keyはハッシュオプジェクトに定義されていない
26; 2 Hashクラスにremoveは定義されていない
27: 1,3,4  1,3 Hashオブジェクトの作成方法 {:a = > 1,:b = > 2} {a: 1,b: 2}またHashクラスのクラスメソッドから構築する方法がある。
28: 2　io.seekはファイルポインタを先頭に移動する。従って出題コードはファイルDateの先頭文字aを読んで表示する処理を繰り返す。
29: 4
30: 4,5  1,3　^New|new$はNにもマッチする ^[New]|[new]$はNなどにもマッチする ^New|new$はNewnewにもマッチする
